// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var app;
    app = {
      init: function() {
        var canvas, col, cols, ctx, drawSquare, fillSquare, fps, gameLoop, hitTest, oldtime, renderThings, row, rows, squareModel, squareSize, x, y,
          _this = this;
        $('#canvas').mousemove(function(e) {
          $("#debug-mouseX").html(e.offsetX + "px");
          return $("#debug-mouseY").html(e.offsetY + "px");
        });
        $('#canvas').mousedown(function(e) {
          $("#debug-mouseclickX").html(e.offsetX + "px");
          $("#debug-mouseclickY").html(e.offsetY + "px");
          return hitTest(e.offsetX, e.offsetY);
        });
        canvas = document.getElementById("canvas");
        ctx = canvas.getContext("2d");
        ctx.lineWidth = 1;
        fps = 0;
        oldtime = +(new Date);
        squareModel = function(x, y, size, id) {
          var square;
          return square = {
            x: x,
            y: y,
            size: size,
            id: id,
            hit: false,
            drawn: false
          };
        };
        this.squareCollection = [];
        squareSize = 32;
        rows = 15;
        cols = 20;
        col = 0;
        while (col < cols) {
          row = 0;
          while (row < rows) {
            y = row * squareSize;
            x = col * squareSize;
            this.squareCollection.push(new squareModel(x, y, squareSize, "square" + col + row));
            row++;
          }
          col++;
        }
        hitTest = function(x, y) {
          return $.each(_this.squareCollection, function(i, square) {
            if (x >= square.x && x <= square.x + square.size && y >= square.y && y <= square.y + square.size) {
              square.drawn = false;
              if (!square.hit) {
                square.hit = true;
                $('#debug-squarename').html(square.id);
                return console.log(square.x);
              } else {
                return square.hit = false;
              }
            }
          });
        };
        renderThings = function() {
          return $.each(_this.squareCollection, function(i, square) {
            if (!square.drawn) {
              ctx.clearRect(square.x, square.y, square.size, square.size);
              square.drawn = true;
              if (square.hit) {
                return fillSquare(square);
              } else {
                return drawSquare(square);
              }
            }
          });
        };
        drawSquare = function(square) {
          ctx.rect(square.x, square.y, square.size, square.size);
          return ctx.stroke();
        };
        fillSquare = function(square) {
          ctx.fillStyle = "rgb(100,100,100)";
          ctx.fillRect(square.x, square.y, square.size, square.size);
          return ctx.stroke();
        };
        gameLoop = function(time) {
          fps = 1000 / (time - oldtime);
          oldtime = time;
          $('#debug-fps').html(fps);
          renderThings();
          return requestAnimationFrame(gameLoop);
        };
        return gameLoop();
      }
    };
    return app.init();
  });

}).call(this);
